/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Admin;

import TheBusiness.Business.Business;
import TheBusiness.ProductManagement.Product;
import TheBusiness.Supplier.Supplier;
import TheBusiness.Supplier.SupplierDirectory;
import TheBusiness.UserAccountManagement.UserAccount;
import java.awt.CardLayout;
import java.util.HashSet;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harsh
 */
public class AdminManageSupplierPanel extends javax.swing.JPanel {

    JPanel ContentPanel;
    Business business;
    UserAccount ua;

    /**
     * Creates new form AdminManageSupplierPanel
     *
     * @param business
     * @param ua
     * @param ContentPanel
     */
    public AdminManageSupplierPanel(Business business, UserAccount ua,
            JPanel ContentPanel) {
        initComponents();

        this.business = business;
        this.ContentPanel = ContentPanel;
        this.ua = ua;

        cancelNewSupplierButton.setVisible(false);
        cancelNewProductButton.setVisible(false);

        newSupplierTB.setText("");
        newSupplierTB.setVisible(false);

        newProductTB.setText("");
        newProductTB.setVisible(false);

        loadBusinessDetails();
        loadTableData();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        businessCB = new javax.swing.JComboBox<>();
        supplierCB = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        productCB = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        ceilingPriceTB = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        floorPriceTB = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        targetPriceTB = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        newSupplierTB = new javax.swing.JTextField();
        newProductTB = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        saveDetailsButton = new javax.swing.JButton();
        backToDashButton = new javax.swing.JButton();
        cancelNewSupplierButton = new javax.swing.JButton();
        cancelNewProductButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Supplier Details");
        jLabel1.setToolTipText("");

        jLabel2.setText("Supplier  :");

        jLabel3.setText("Business  :");

        businessCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                businessCBActionPerformed(evt);
            }
        });

        supplierCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierCBActionPerformed(evt);
            }
        });

        jLabel4.setText("Product :");

        productCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productCBActionPerformed(evt);
            }
        });

        jLabel5.setText("Ceiling Price :");

        jLabel6.setText("Floor Price :");

        jLabel7.setText("Target Price :");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "SNo", "Supplier", "Product", "Ceiling",
                "Floor","Target",""
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        saveDetailsButton.setBackground(new java.awt.Color(51, 153, 255));
        saveDetailsButton.setText("Save");

        backToDashButton.setBackground(new java.awt.Color(51, 153, 255));
        backToDashButton.setText("<< Back");
        backToDashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToDashButtonActionPerformed(evt);
            }
        });

        cancelNewSupplierButton.setBackground(new java.awt.Color(255, 51, 51));
        cancelNewSupplierButton.setText("X");
        cancelNewSupplierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelNewSupplierButtonActionPerformed(evt);
            }
        });

        cancelNewProductButton.setBackground(new java.awt.Color(255, 51, 51));
        cancelNewProductButton.setText("X");
        cancelNewProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelNewProductButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(businessCB, 0, 170, Short.MAX_VALUE)
                            .addComponent(supplierCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newProductTB, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newSupplierTB, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cancelNewSupplierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelNewProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ceilingPriceTB, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(floorPriceTB, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(targetPriceTB, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(165, 165, 165)
                        .addComponent(backToDashButton)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(saveDetailsButton)
                        .addGap(15, 15, 15))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backToDashButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(businessCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(supplierCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newSupplierTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelNewSupplierButton))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(productCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newProductTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelNewProductButton))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ceilingPriceTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(floorPriceTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(targetPriceTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(saveDetailsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void businessCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_businessCBActionPerformed
        // TODO add your handling code here:
        if (this.businessCB.getSelectedItem() != null) {
            String bName = this.businessCB.getSelectedItem().toString();
            loadSupplierData(bName);
        }
    }//GEN-LAST:event_businessCBActionPerformed

    private void supplierCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierCBActionPerformed
        // TODO add your handling code here:
        if (this.supplierCB.getSelectedItem() != null) {
            String supName = this.supplierCB.getSelectedItem().toString();
            if (supName.equalsIgnoreCase("Add_New")) {
                supplierCB.removeAllItems();
                supplierCB.setVisible(false);
                newSupplierTB.setText("");
                newSupplierTB.setVisible(true);

                productCB.removeAllItems();
                productCB.setVisible(false);
                newProductTB.setText("");
                newProductTB.setVisible(true);

                cancelNewSupplierButton.setVisible(true);
                cancelNewProductButton.setVisible(true);

            } else {
                loadProductData(supName);
                loadTableData();
            }
        }
    }//GEN-LAST:event_supplierCBActionPerformed

    private void backToDashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToDashButtonActionPerformed
        // TODO add your handling code here:
        AdminManageSupplierCatalogPanel manageSupplier
                = new AdminManageSupplierCatalogPanel(business, ua, ContentPanel);
        ContentPanel.add("AdminManageSupplierPanel", manageSupplier);
        CardLayout layout = (CardLayout) ContentPanel.getLayout();
        layout.next(ContentPanel);
    }//GEN-LAST:event_backToDashButtonActionPerformed

    private void productCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productCBActionPerformed
        // TODO add your handling code here:
        if ((this.productCB.getSelectedItem() != null)
                && this.supplierCB.getSelectedItem() != null) {
            String supName = this.supplierCB.getSelectedItem().toString();
            String prodName = this.productCB.getSelectedItem().toString();

            if (prodName.equalsIgnoreCase("Add_New")) {
                productCB.removeAllItems();
                productCB.setVisible(false);
                newProductTB.setText("");
                newProductTB.setVisible(true);
                cancelNewProductButton.setVisible(true);
            } else {
                loadSelectedProductData(prodName);
            }
        }
    }//GEN-LAST:event_productCBActionPerformed

    private void cancelNewSupplierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelNewSupplierButtonActionPerformed
        // TODO add your handling code here:
        newSupplierTB.setText("");
        newSupplierTB.setVisible(false);
        newProductTB.setText("");
        newProductTB.setVisible(false);

        cancelNewSupplierButton.setVisible(false);
        cancelNewProductButton.setVisible(false);

        supplierCB.setVisible(true);
        productCB.setVisible(true);

        String bName = this.businessCB.getSelectedItem().toString();
        loadSupplierData(bName);

    }//GEN-LAST:event_cancelNewSupplierButtonActionPerformed

    private void cancelNewProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelNewProductButtonActionPerformed
        // TODO add your handling code here:
        newProductTB.setText("");
        newProductTB.setVisible(false);

        cancelNewSupplierButton.setVisible(false);
        cancelNewProductButton.setVisible(false);

        productCB.setVisible(true);
        String supName = this.supplierCB.getSelectedItem().toString();
        loadProductData(supName);

        ceilingPriceTB.setText("");
        floorPriceTB.setText("");
        targetPriceTB.setText("");

    }//GEN-LAST:event_cancelNewProductButtonActionPerformed

    private void loadBusinessDetails() {
        if (this.business != null) {
            DefaultComboBoxModel subcb = (DefaultComboBoxModel) businessCB.getModel();
            subcb.removeAllElements();
            subcb.addElement("Select");
            Set<String> subjSet = new HashSet<>();
            subjSet.add(business.getName());
            if (!subjSet.isEmpty()) {
                subcb.addAll(subjSet);
            }
        }
    }

    private void loadSupplierData(String businessName) {
        if ((this.business.getSupplierDirectory() != null)
                && (!this.business.getSupplierDirectory().getSuplierList().isEmpty())) {
            System.out.println("Supp Size :" + this.business.getSupplierDirectory().getSuplierList().size());
            DefaultComboBoxModel dcb = (DefaultComboBoxModel) supplierCB.getModel();
            dcb.removeAllElements();
            dcb.addElement("Select");
            Set<String> stuSet = new HashSet<>();
            if (business.getName().equalsIgnoreCase(businessName)) {
                dcb.addElement("Add_New");
                for (Supplier supObj : business.getSupplierDirectory().getSuplierList()) {
                    stuSet.add(supObj.getName());
                }
                if (!stuSet.isEmpty()) {
                    dcb.addAll(stuSet);
                } else {

                }
            }

        }
    }

    private void loadProductData(String supplierName) {
        if ((this.business.getSupplierDirectory() != null)
                && (!this.business.getSupplierDirectory().getSuplierList().isEmpty())) {
            DefaultComboBoxModel dcb = (DefaultComboBoxModel) productCB.getModel();
            dcb.removeAllElements();
            dcb.addElement("Select");
            Set<String> stuSet = new HashSet<>();
            dcb.addElement("Add_New");
            for (Supplier supObj : this.business.getSupplierDirectory().getSuplierList()) {
                if (supObj.getName().equalsIgnoreCase(supplierName)) {
                    if (supObj.getProductCatalog() != null
                            && !supObj.getProductCatalog().getProductList().isEmpty()) {
                        for (Product pr : supObj.getProductCatalog().getProductList()) {
                            stuSet.add(pr.getName());
                        }
                    }
                }
            }
            if (!stuSet.isEmpty()) {
                dcb.addAll(stuSet);
            } else {

            }
        }
    }

    private void loadSelectedProductData(String productName) {
        if ((this.business.getSupplierDirectory() != null)
                && (!this.business.getSupplierDirectory().getSuplierList().isEmpty())) {
            for (Supplier supObj : this.business.getSupplierDirectory().getSuplierList()) {
                if (supObj.getProductCatalog() != null
                        && !supObj.getProductCatalog().getProductList().isEmpty()) {
                    for (Product pr : supObj.getProductCatalog().getProductList()) {
                        if (pr.getName().equalsIgnoreCase(productName)) {
                            ceilingPriceTB.setText(pr.getCeilingPrice() + "");
                            floorPriceTB.setText(pr.getFloorPrice() + "");
                            targetPriceTB.setText(pr.getTargetPrice() + "");

                            break;
                        }
                    }
                }
            }
        }
    }

    private void loadTableData() {
        if (business != null) {
            String businessName = this.businessCB.getSelectedItem() != null
                    ? this.businessCB.getSelectedItem().toString() : "";
            String supplierName = this.supplierCB.getSelectedItem() != null
                    ? this.supplierCB.getSelectedItem().toString() : "";
            if (business.getName().equalsIgnoreCase(businessName)) {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);
                int rowIndex = 1;
                SupplierDirectory supDir = business.getSupplierDirectory();
                if (supDir != null && !supDir.getSuplierList().isEmpty()) {
                    for (Supplier sup : supDir.getSuplierList()) {
                        if (sup.getName().equalsIgnoreCase(supplierName)) {
                            for (Product prod : sup.getProductCatalog().getProductList()) {
                                Object[] row = new Object[7];
                                row[0] = rowIndex;
                                row[1] = sup.getName();
                                row[2] = prod.getName();
                                row[4] = prod.getCeilingPrice();
                                row[3] = prod.getFloorPrice();
                                row[5] = prod.getTargetPrice();
                                row[6] = "";
                                dtm.addRow(row);
                                rowIndex++;
                            }
                        }
                    }
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToDashButton;
    private javax.swing.JComboBox<String> businessCB;
    private javax.swing.JButton cancelNewProductButton;
    private javax.swing.JButton cancelNewSupplierButton;
    private javax.swing.JTextField ceilingPriceTB;
    private javax.swing.JTextField floorPriceTB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField newProductTB;
    private javax.swing.JTextField newSupplierTB;
    private javax.swing.JComboBox<String> productCB;
    private javax.swing.JButton saveDetailsButton;
    private javax.swing.JComboBox<String> supplierCB;
    private javax.swing.JTextField targetPriceTB;
    // End of variables declaration//GEN-END:variables
}
