/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.iris.ui.usermgmt;

import com.iris.backend.controller.EnterpriseController;
import com.iris.backend.controller.EventController;
import com.iris.backend.controller.UserController;
import com.iris.backend.controller.WorkRequestController;
import com.iris.backend.model.Catering;
import com.iris.backend.model.Event;
import com.iris.backend.model.Hotel;
import com.iris.backend.model.TravelAgent;
import com.iris.backend.model.User;
import com.iris.backend.model.WorkRequest;
import com.iris.ui.resources.ScrollBar;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Snehal
 */
public class UserViewMyEvent extends javax.swing.JPanel {

    /**
     * Creates new form UserViewMyEvent
     */
    JSplitPane mainSplitPane;
    EventController eventController;
    EnterpriseController enterpriseController;
    WorkRequestController wrController;
    UserController userController;
    User loggedInUser;

    public UserViewMyEvent(JSplitPane jSplitPane, User loggedUser) {
        try {
            this.mainSplitPane = jSplitPane;
            this.loggedInUser = loggedUser;
            eventController = new EventController();
            wrController = new WorkRequestController();
            userController = new UserController();
            enterpriseController = new EnterpriseController();
            initComponents();
            jPanel1.setVisible(false);
            jPanel2.setVisible(false);
            jPanel3.setVisible(false);
            eventManagerField.setVisible(false);
            managerStatus.setVisible(false);
            populateTable();
            table.fixTable(jScrollPane);
            fixScrollBar(jScrollPane1);
        } catch (SQLException ex) {
            Logger.getLogger(UserViewMyEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fixScrollBar(JScrollPane scroll) {
        scroll.setBorder(null);
        scroll.setVerticalScrollBar(new ScrollBar());
        scroll.getVerticalScrollBar().setBackground(Color.WHITE);
        scroll.getViewport().setBackground(Color.WHITE);
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        scroll.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        attendeesCountField = new com.iris.ui.resources.TextField();
        searchBtn = new com.iris.ui.resources.Button();
        statusFilter = new javax.swing.JComboBox<>();
        typeField = new com.iris.ui.resources.TextField();
        nameField = new com.iris.ui.resources.TextField();
        typeDropdown = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        areaField = new com.iris.ui.resources.TextField();
        scrollBar1 = new com.iris.ui.resources.ScrollBar();
        descriptionField = new com.iris.ui.resources.TextField();
        jLabel3 = new javax.swing.JLabel();
        fromField = new com.iris.ui.resources.TextField();
        eventManagerField = new com.iris.ui.resources.TextField();
        toField = new com.iris.ui.resources.TextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        travelBtn = new com.iris.ui.resources.Button();
        travelAddress = new com.iris.ui.resources.TextField();
        travelName = new com.iris.ui.resources.TextField();
        travelImage1 = new com.iris.ui.resources.ImageAvatar();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        hotelBtn = new com.iris.ui.resources.Button();
        hotelAddress = new com.iris.ui.resources.TextField();
        hotelName = new com.iris.ui.resources.TextField();
        hotelType = new javax.swing.JLabel();
        hotelImage1 = new com.iris.ui.resources.ImageAvatar();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cateringBtn = new com.iris.ui.resources.Button();
        cateringAddress = new com.iris.ui.resources.TextField();
        cateringName = new com.iris.ui.resources.TextField();
        cateringImage1 = new com.iris.ui.resources.ImageAvatar();
        managerStatus = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        table = new com.iris.ui.resources.Table();
        jLocation = new javax.swing.JLabel();

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel5.setBackground(new java.awt.Color(245, 241, 241));
        jPanel5.setMaximumSize(new java.awt.Dimension(1196, 1399));
        jPanel5.setMinimumSize(new java.awt.Dimension(1196, 1399));
        jPanel5.setPreferredSize(new java.awt.Dimension(1196, 1399));

        attendeesCountField.setEditable(false);
        attendeesCountField.setLabelText("Attendees Count");
        attendeesCountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendeesCountFieldActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(255, 153, 0));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        statusFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "ASSIGNED MANAGER", "Accepted", "Rejected" }));
        statusFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusFilterActionPerformed(evt);
            }
        });

        typeField.setEditable(false);
        typeField.setText("Public");
        typeField.setLabelText("Type");
        typeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeFieldActionPerformed(evt);
            }
        });

        nameField.setEditable(false);
        nameField.setLabelText("Name");

        typeDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Public", "Private" }));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setText("Status");

        areaField.setEditable(false);
        areaField.setLabelText("Area");

        descriptionField.setEditable(false);
        descriptionField.setLabelText("Description");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Type");

        fromField.setEditable(false);
        fromField.setLabelText("From");

        eventManagerField.setEditable(false);
        eventManagerField.setLabelText("Event Manager");

        toField.setEditable(false);
        toField.setLabelText("To");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setText("TRAVEL");

        travelBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        travelBtn.setText("Accepted");
        travelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                travelBtnActionPerformed(evt);
            }
        });

        travelAddress.setEditable(false);
        travelAddress.setLabelText("Address");

        travelName.setEditable(false);
        travelName.setLabelText("Name");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167)
                        .addComponent(travelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(travelName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(travelAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(travelImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(travelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(travelAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(travelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(travelImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("HOTEL :");

        hotelBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        hotelBtn.setText("Accepted");
        hotelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelBtnActionPerformed(evt);
            }
        });

        hotelAddress.setEditable(false);
        hotelAddress.setLabelText("Address");

        hotelName.setEditable(false);
        hotelName.setLabelText("Name");

        hotelType.setText("Hotel Type");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(hotelName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(hotelAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(hotelImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hotelType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hotelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(hotelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hotelType))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotelAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hotelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(hotelImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("CATERING");

        cateringBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cateringBtn.setText("Accepted");
        cateringBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cateringBtnActionPerformed(evt);
            }
        });

        cateringAddress.setEditable(false);
        cateringAddress.setLabelText("Address");

        cateringName.setEditable(false);
        cateringName.setLabelText("Name");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174)
                        .addComponent(cateringBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(cateringName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(cateringAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(cateringImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cateringBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cateringAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cateringName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(59, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cateringImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(26, Short.MAX_VALUE))))
        );

        managerStatus.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        managerStatus.setText("Event Manager hasn't been assigned yet. You will be notified soon.");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "S No", "Name", "Description", "Area", "From", "To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(table);

        jLocation.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLocation.setForeground(new java.awt.Color(4, 72, 210));
        jLocation.setText("User / My Events");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(eventManagerField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(managerStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(statusFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(120, 120, 120)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(typeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(154, 154, 154)
                                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3)))
                            .addComponent(jScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(descriptionField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(typeField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fromField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(toField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(attendeesCountField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(areaField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLocation))
                .addContainerGap(456, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLocation)
                .addGap(45, 45, 45)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addComponent(statusFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(areaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attendeesCountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(scrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(eventManagerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(managerStatus)
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        jScrollPane1.setViewportView(jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1196, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1399, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    private void attendeesCountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendeesCountFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attendeesCountFieldActionPerformed

    private WorkRequest getSpecificEvent(ArrayList<WorkRequest> wrEvents, String val, String toId) {
        // based on wr status show contents
        WorkRequest specWr = new WorkRequest();
        for (WorkRequest wr : wrEvents) {
            if (wr.getType().equalsIgnoreCase(val) && wr.getToID() == Integer.parseInt(toId)) {
                specWr = wr;
            }
        }
        return specWr;
    }

    private Hotel hotelMapper(ResultSet rs) throws SQLException {
        Hotel hotel = new Hotel();
        while (rs.next()) {
            hotel.setHotelID(Integer.parseInt(rs.getString("H_ID")));
            hotel.setHotelName(rs.getString("H_NAME"));
            hotel.setHotelAddress(rs.getString("H_ADDRESS"));
            hotel.setHotelArea(rs.getString("H_AREA"));
            hotel.setHotelType(rs.getString("H_TYPE"));
            hotel.setCapacity(rs.getString("H_CAPACITY"));
            hotel.setHotelAdmin(rs.getString("H_ADMIN_ID"));
            hotel.setBookedDates(rs.getString("H_BOOKED_DATES"));
            hotel.setPhoto(rs.getString("H_PHOTO"));
            hotel.setEmail(rs.getString("H_EMAIL"));
            hotel.setPhone(rs.getString("H_PHONE"));
            hotel.setStatus(rs.getString("H_STATUS"));
        }

        return hotel;
    }

    private Catering catrMapper(ResultSet rs) throws SQLException {
        Catering catering = new Catering();
        while (rs.next()) {
            catering.setCateringID(Integer.parseInt(rs.getString("C_ID")));
            catering.setCateringName(rs.getString("C_NAME"));
            catering.setCateringAddress(rs.getString("C_ADDRESS"));
            catering.setCateringArea(rs.getString("C_AREA"));
            catering.setPhoto(rs.getString("C_PHOTO"));
            catering.setCapacity(rs.getString("C_CAPACITY"));
            catering.setBookedDates(rs.getString("C_BOOKED_DATES"));
            catering.setCateringAdmin(rs.getString("C_ADMIN"));
            catering.setEmail(rs.getString("C_EMAIL"));
            catering.setPhone(rs.getString("C_PHONE"));
            catering.setStatus(rs.getString("C_STATUS"));
        }

        return catering;
    }

    private TravelAgent travelAgentMapper(ResultSet rs) throws SQLException {
        TravelAgent travelAgent = new TravelAgent();
        while (rs.next()) {
            travelAgent.setTravelAgentID(Integer.parseInt(rs.getString("TA_ID")));
            travelAgent.setTravelAgentName(rs.getString("TA_NAME"));
            travelAgent.setTravelAgentAddress(rs.getString("TA_ADDRESS"));
            travelAgent.setTravelAgentArea(rs.getString("TA_AREA"));
            travelAgent.setPhoto(rs.getString("TA_PHOTO"));
            travelAgent.setCapacity(rs.getString("TA_CAPACITY"));
            travelAgent.setBookedDates(rs.getString("TA_BOOKED_DATES"));
            travelAgent.setTravelAgentAdmin(rs.getString("TA_ADMIN"));
            travelAgent.setEmail(rs.getString("TA_EMAIL"));
            travelAgent.setPhone(rs.getString("TA_PHONE"));
            travelAgent.setStatus(rs.getString("TA_STATUS"));
        }

        return travelAgent;
    }

    private void travelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_travelBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_travelBtnActionPerformed

    private void hotelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotelBtnActionPerformed

    private void cateringBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cateringBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cateringBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void typeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeFieldActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        try {

            jPanel1.setVisible(false);
            jPanel2.setVisible(false);
            jPanel3.setVisible(false);
            eventManagerField.setVisible(false);

            // TODO add your handling code here:
            int selectedRowIndex = table.getSelectedRow();
//            System.out.println(selectedRowIndex);
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row to view");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            Event selectedEvent = (Event) model.getValueAt(selectedRowIndex, 0);
//            System.out.println("selectedEvent");
            typeField.setText(selectedEvent.getEventType());
            nameField.setText(selectedEvent.getEventName());
            areaField.setText(selectedEvent.getEventArea());
            descriptionField.setText(selectedEvent.getEventDescription());
            fromField.setText(selectedEvent.getEventFrom().toString().substring(0, 10));
            toField.setText(selectedEvent.getEventTo().toString().substring(0, 10));
            attendeesCountField.setText(selectedEvent.getAtendeesCount());
            int eventManagerId = selectedEvent.getEventManagerID();
            if (eventManagerId != -1) {
                ArrayList<User> eventManager = userController.getUserById(eventManagerId);
                eventManagerField.setVisible(true);
                eventManagerField.setText(eventManager.get(0).getName());
//                System.out.println("managerr");
//                System.out.println(eventManager.get(0).getName());
                managerStatus.setVisible(false);

                boolean isAccomodation = selectedEvent.getAccomodationNeeded().equalsIgnoreCase("yes") ? true : false;
                boolean isFunctionHall = selectedEvent.getFunctionHallNeeded().equalsIgnoreCase("yes") ? true : false;
                boolean isCatering = selectedEvent.getCateringNeeded().equalsIgnoreCase("yes") ? true : false;
                boolean isTravel = selectedEvent.getTravelNeeded().equalsIgnoreCase("yes") ? true : false;

                //  fetch all work request related to this eventId
                ArrayList<WorkRequest> wrEvents = new ArrayList<>();
                wrEvents = wrController.getWorkRequestByEventId(selectedEvent.getEventID());

                if (isAccomodation || isFunctionHall) {
                    jPanel1.setVisible(false);
                    hotelType.setText(isAccomodation ? "Accomodation" : "Function Hall");

                    int id = selectedEvent.getChosenHotelID();

                    hotelBtn.setVisible(false);
                    hotelName.setVisible(false);
                    hotelAddress.setVisible(false);
                    hotelImage1.setVisible(false);
                    if (id != -1) {
                        jPanel1.setVisible(true);
                        hotelBtn.setVisible(true);
                        hotelName.setVisible(true);
                        hotelAddress.setVisible(true);
                        hotelImage1.setVisible(true);

                        ResultSet resultSet = enterpriseController.getEnterpriseDataEnterprise("HOTEL", id);
                        Hotel hotelData = hotelMapper(resultSet);

                        String adminId = hotelData.getHotelAdmin();
                        WorkRequest hotelWr = getSpecificEvent(wrEvents, "EVENTMANAGER_HOTELADMIN", adminId);
                        hotelBtn.setText(hotelWr.getStatus());
                        //  get Hotel Details
                        hotelName.setText(hotelData.getHotelName());
                        hotelAddress.setText(hotelData.getHotelAddress());
                        hotelImage1.setIcon(new ImageIcon(hotelData.getPhoto()));

                    } else {
                        jPanel1.setVisible(true);
                        hotelBtn.setVisible(true);
                        hotelBtn.setText("Pending");
                    }
                }
                if (isCatering) {
                    jPanel2.setVisible(false);

                    int id = selectedEvent.getChosenCateringID();

                    cateringBtn.setVisible(false);
                    cateringName.setVisible(false);
                    cateringAddress.setVisible(false);
                    cateringImage1.setVisible(false);
                    if (id != -1) {
                        jPanel2.setVisible(true);
                        cateringBtn.setVisible(true);
                        cateringName.setVisible(true);
                        cateringAddress.setVisible(true);
                        cateringImage1.setVisible(true);

                        ResultSet resultSet = enterpriseController.getEnterpriseDataEnterprise("CATERING", id);
                        Catering catrData = catrMapper(resultSet);

                        String adminId = catrData.getCateringAdmin();
                        WorkRequest caterWr = getSpecificEvent(wrEvents, "EVENTMANAGER_CATERINGADMIN", adminId);
                        cateringBtn.setText(caterWr.getStatus());
                        // get Catering Details
                        cateringName.setText(catrData.getCateringName());
                        cateringAddress.setText(catrData.getCateringAddress());
                        cateringImage1.setIcon(new ImageIcon(catrData.getPhoto()));
                    } else {
                        jPanel2.setVisible(true);
                        cateringBtn.setVisible(true);
                        cateringBtn.setText("Pending");
                    }
                }
                if (isTravel) {
                    jPanel3.setVisible(false);

                    int id = selectedEvent.getChosenTravelAgentID();

                    travelBtn.setVisible(false);
                    travelName.setVisible(false);
                    travelAddress.setVisible(false);
                    travelImage1.setVisible(false);
                    if (id != -1) {
                        jPanel3.setVisible(true);
                        travelBtn.setVisible(true);
                        travelName.setVisible(true);
                        travelAddress.setVisible(true);
                        travelImage1.setVisible(true);

                        ResultSet resultSet = enterpriseController.getEnterpriseDataEnterprise("TRAVEL", id);
                        TravelAgent travelData = travelAgentMapper(resultSet);

                        String adminId = travelData.getTravelAgentAdmin();
                        WorkRequest travelWr = getSpecificEvent(wrEvents, "EVENTMANAGER_TRAVELADMIN", adminId);
                        travelBtn.setText("ACCEPTED");
                        //            get Travel Details
                        travelName.setText(travelData.getTravelAgentName());
                        travelAddress.setText(travelData.getTravelAgentAddress());
                        travelImage1.setIcon(new ImageIcon(travelData.getPhoto()));
                    } else {
                        jPanel3.setVisible(true);
                        travelBtn.setVisible(true);
                        travelBtn.setText("Pending");
                    }
                }
            } else {
                managerStatus.setVisible(true);
            }

        } catch (SQLException ex) {
            Logger.getLogger(UserViewMyEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void statusFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusFilterActionPerformed

    private void populateTable() {
        try {
            DefaultTableModel dtmodel = (DefaultTableModel) table.getModel();
            dtmodel.setRowCount(0);
            ArrayList<Event> eventList = new ArrayList<>();

            String status = statusFilter.getSelectedItem().toString();
//            String date = dateFilter.getDate().toString();   // if date null?
            String type = typeDropdown.getSelectedItem().toString();

            eventList = eventController.getFilteredEventsList(this.loggedInUser.getID(), status, type); //TODO: Pass USER ID 
//            System.out.println(eventList);
            for (Event eve : eventList) {
                Object[] obj = new Object[6];
                obj[0] = eve;  // index val
                obj[1] = eve.getEventName();
                obj[2] = eve.getEventDescription();
                obj[3] = eve.getEventArea();
                obj[4] = eve.getEventFrom().substring(0, 10);
                obj[5] = eve.getEventTo().substring(0, 10);
                dtmodel.addRow(obj);
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserViewMyEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.iris.ui.resources.TextField areaField;
    private com.iris.ui.resources.TextField attendeesCountField;
    private com.iris.ui.resources.TextField cateringAddress;
    private com.iris.ui.resources.Button cateringBtn;
    private com.iris.ui.resources.ImageAvatar cateringImage1;
    private com.iris.ui.resources.TextField cateringName;
    private com.iris.ui.resources.TextField descriptionField;
    private com.iris.ui.resources.TextField eventManagerField;
    private com.iris.ui.resources.TextField fromField;
    private com.iris.ui.resources.TextField hotelAddress;
    private com.iris.ui.resources.Button hotelBtn;
    private com.iris.ui.resources.ImageAvatar hotelImage1;
    private com.iris.ui.resources.TextField hotelName;
    private javax.swing.JLabel hotelType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLocation;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel managerStatus;
    private com.iris.ui.resources.TextField nameField;
    private com.iris.ui.resources.ScrollBar scrollBar1;
    private com.iris.ui.resources.Button searchBtn;
    private javax.swing.JComboBox<String> statusFilter;
    private com.iris.ui.resources.Table table;
    private com.iris.ui.resources.TextField toField;
    private com.iris.ui.resources.TextField travelAddress;
    private com.iris.ui.resources.Button travelBtn;
    private com.iris.ui.resources.ImageAvatar travelImage1;
    private com.iris.ui.resources.TextField travelName;
    private javax.swing.JComboBox<String> typeDropdown;
    private com.iris.ui.resources.TextField typeField;
    // End of variables declaration//GEN-END:variables
}
