/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package elearning.ui.issuer;

import elearning.models.StudentCertModel;
import elearning.models.StudentCourseModel;
import elearning.models.StudentDataModel;
import elearning.models.UserModel;
import elearning.models.UserSignUpModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harsh
 */
public class IssuerCertificateIssuePanel extends javax.swing.JPanel {

    JPanel IssuerContentPanel;
    UserSignUpModel userSignUpObj;
    UserModel userObj;
    StudentDataModel studentDataObj;

    /**
     * Creates new form IssuerCertificateIssuePanel
     *
     * @param IssuerContentPanel
     * @param userSignUpObj
     * @param userObj
     * @param studentDataObj
     */
    public IssuerCertificateIssuePanel(JPanel IssuerContentPanel,
            UserModel userObj,
            UserSignUpModel userSignUpObj,
            StudentDataModel studentDataObj) {
        initComponents();

        this.IssuerContentPanel = IssuerContentPanel;
        this.userObj = userObj;
        this.userSignUpObj = userSignUpObj;
        this.studentDataObj = studentDataObj;

        CertificateRequestsLB.setText("");
        jTable1.setVisible(false);

        loadStudentData();
    }

    private void loadStudentData() {
        if ((this.studentDataObj.getStudentCertObj() != null)) {
            DefaultComboBoxModel dcb = (DefaultComboBoxModel) StudentCB.getModel();
            dcb.removeAllElements();
            dcb.addElement("Select");
            for (StudentCertModel certObj : this.studentDataObj.getStudentCertObj()) {
                if (certObj.getReqCertificateFlg().equalsIgnoreCase("R")) {
                    dcb.addElement(certObj.getStudentName());
                }
            }
        }
    }

    private void loadTableData(final String studentName) {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);

        if (this.studentDataObj.getStudentCourseLi() != null
                && !this.studentDataObj.getStudentCourseLi().isEmpty()) {
            int rowIndex = 1;
            int statIndex = 0;
            for (StudentCourseModel studCourseObj : this.studentDataObj.getStudentCourseLi()) {
                if (studCourseObj.getStudentName().equalsIgnoreCase(studentName)) {
                    Object[] row = new Object[9];
                    row[0] = rowIndex;
                    row[1] = studCourseObj.getCourseName();
                    row[2] = studCourseObj.getSubjectName();
                    row[3] = studCourseObj.getSemisterName();
                    row[4] = studCourseObj.getProfessorName();
                    row[5] = studCourseObj.getStartDate();
                    row[6] = studCourseObj.getEndDate();
                    row[7] = studCourseObj.getStatus();
                    row[8] = studCourseObj.getGrade();

                    if (studCourseObj.getStatus().equalsIgnoreCase("Completed")) {
                        statIndex++;
                    }

                    dtm.addRow(row);
                    rowIndex++;
                }
            }
            CertificateRequestsLB.setText(statIndex+": Students Requested Certificates");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CertificateRequestsLB = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        StudentCB = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Issue Certificate");

        jLabel2.setText("Certificates Request  :");

        CertificateRequestsLB.setForeground(new java.awt.Color(0, 204, 102));
        CertificateRequestsLB.setText("jLabel3");

        jLabel3.setText("Student Name  :");

        StudentCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        StudentCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentCBActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Sno", "Course", "Subject", "Term","Professor",
                "Start Date", "End Date", "Status","Grade"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setText("Issue Certificate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(273, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(231, 231, 231))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StudentCB, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CertificateRequestsLB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CertificateRequestsLB)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(StudentCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void StudentCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentCBActionPerformed
        // TODO add your handling code here:
        if (this.StudentCB.getSelectedItem() != null) {
            String stuName = this.StudentCB.getSelectedItem().toString();
            loadTableData(stuName);
            jTable1.setVisible(true);
        }
    }//GEN-LAST:event_StudentCBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (this.StudentCB.getSelectedItem() != null) {
            String stuName = this.StudentCB.getSelectedItem().toString();
            if (this.studentDataObj.getStudentCourseLi() != null
                    && !this.studentDataObj.getStudentCourseLi().isEmpty()) {

            }
            if (this.studentDataObj.getStudentCertObj() != null
                    && !this.studentDataObj.getStudentCertObj().isEmpty()) {
                for (StudentCertModel studentCertObj : this.studentDataObj.getStudentCertObj()) {
                    if (studentCertObj.getStudentName().equalsIgnoreCase(stuName)) {
                        studentCertObj.setIssueCertificateFlg("I");
                        studentCertObj.setApprCertificateFlg("A");
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Certificate Issued !");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CertificateRequestsLB;
    private javax.swing.JComboBox<String> StudentCB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
